name: Attach Artifacts to Draft Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: Release tag to attach assets to
        required: true
        default: v2.1.2

permissions:
  contents: write

jobs:
  deb:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Install Debian deps
        run: |
          sudo apt-get update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -qq \
            build-essential libpam0g-dev dpkg-dev debhelper devscripts fakeroot ca-certificates qemu-user-static binfmt-support

      - name: Build DEB (native or qemu)
        env:
          WERROR: "1"
        run: |
          make clean-packages || true
          make -j2 sudosh.1
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            make -j2 deb WERROR=1
          else
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker run --rm -v "$PWD":/src -w /src arm64v8/ubuntu:22.04 bash -lc '
              set -e;
              apt-get update -qq;
              DEBIAN_FRONTEND=noninteractive apt-get install -y -qq build-essential libpam0g-dev dpkg-dev debhelper devscripts fakeroot ca-certificates >/dev/null;
              make -j2 deb WERROR=0;
            '
          fi

      - name: Upload DEB assets to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.tag_name }}
          file: dist/*.deb
          file_glob: true
          overwrite: true

  rpm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: el9
            image: almalinux:9
            arch: x86_64
          - distro: el9
            image: almalinux:9
            arch: aarch64
          - distro: el8
            image: rockylinux:8
            arch: x86_64
          - distro: el8
            image: rockylinux:8
            arch: aarch64
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Build RPM in container
        run: |
          if [ "${{ matrix.arch }}" = "aarch64" ]; then
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            EMU_PREFIX="--platform linux/arm64/v8"
          else
            EMU_PREFIX=""
          fi
          docker run $EMU_PREFIX --rm -v "$PWD":/src -w /src ${{ matrix.image }} bash -lc '
            set -e;
            dnf -y -q install gcc make pam-devel rpm-build tar gzip which findutils git >/dev/null || \
              (yum -y -q install gcc make pam-devel rpm-build tar gzip which findutils git >/dev/null || true);
            git config --global --add safe.directory /src || true;
            make clean-packages >/dev/null || true;
            make -j2 rpm WERROR=1;
            ls -al dist;
          '

      - name: Upload RPM assets to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.tag_name }}
          file: |
            dist/*.rpm
            dist/*.src.rpm
          file_glob: true
          overwrite: true

